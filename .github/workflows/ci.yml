
name: ci

on:
  push:
    branches: [ "main" ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

jobs:

  tests:
    strategy:
      matrix:
        name: [ unit ]
    runs-on: ubuntu-latest
    name: test (${{ matrix.name }})
    steps:
      - name: Checkout code
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          fetch-depth: 0

      - name: Install Go
        uses: actions/setup-go@44694675825211faa026b3c33043df3e48a5fa00 # v6
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Login to GitHub Container Registry
        if: startsWith(github.ref, 'refs/tags/v')
        uses: docker/login-action@5e57cd118135c172c3672efd75eb46360885c0ef # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: |
          make bdi

      - name: Tag and push Docker image to GHCR
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          # Tag with version and latest
          REPO_OWNER=$(echo ${{ github.repository_owner }} | tr '[:upper:]' '[:lower:]')
          docker tag andriykalashnykov/go-faces-http:latest ghcr.io/$REPO_OWNER/go-faces-http:${{ github.ref_name }}
          docker tag andriykalashnykov/go-faces-http:latest ghcr.io/$REPO_OWNER/go-faces-http:latest
          
          # Push both tags
          docker push ghcr.io/$REPO_OWNER/go-faces-http:${{ github.ref_name }}
          docker push ghcr.io/$REPO_OWNER/go-faces-http:latest

      # Steps below are only executed for tag pushes
      - name: Extract binary from Docker image
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          docker run -v $PWD:/opt/mount --rm --entrypoint cp andriykalashnykov/go-faces-http:latest /app/faces /opt/mount/faces
          TAG_NAME=${GITHUB_REF#refs/tags/}
          # Create both versioned and non-versioned archives
          tar zcvf ./linux_amd64.tar.gz ./faces
          tar zcvf ./${TAG_NAME}_linux_amd64.tar.gz ./faces

      - name: Create Release
        if: startsWith(github.ref, 'refs/tags/v')
        id: create_release
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          files: |
            ./linux_amd64.tar.gz
            ./${{ github.ref_name }}_linux_amd64.tar.gz
          draft: false
          prerelease: false

      - name: Update Latest Release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2
        with:
          files: ./linux_amd64.tar.gz
          tag_name: latest
          name: Latest Release
          draft: false
          prerelease: false